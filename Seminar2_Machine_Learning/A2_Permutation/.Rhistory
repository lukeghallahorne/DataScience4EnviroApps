p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue") +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue")
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 18) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue")
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 17) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue")
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 16) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue")
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue")
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab("U+03A7 ^2")
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(paste0(U03A7, "^2"))
p1
# change labels and aesthetics for visualization
xlab(expression(paste(Chi^2))
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
# change labels and aesthetics for visualization
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(Chi^2)))
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2)))
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Proportion")
p1
?geom_density
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density") +
geom_density(data = filter(perm_df, chiSq < obsXsq), aes(x = chiSq),
alpha = 0.5, color = "darkred")
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density") +
geom_density(data = filter(perm_df, chiSq < obsXsq), aes(x = chiSq),
alpha = 0.5, fill = "darkred")
p1
perm_df$chiSq > obsXsq
# convert permutated chi-squared values into dataframe
perm_df <- tibble(chiSq = chiSqVec)
perm_df
if(perm_df$chiSq > obsXsq) {
perm_df$sign <- TRUE
} else {
perm_df$sign <- FALSE
}
# convert permutated chi-squared values into dataframe
perm_df <- tibble(chiSq = chiSqVec)
perm_df
for(i in 1:nrow(perm_df)) {
s
}
for(i in 1:nrow(perm_df)) {
if(perm_df$chiSq[i] > obsXsq) {
perm_df$sign[i] <- TRUE
} else {
perm_df$sign[i] <- FALSE
}
}
# convert permutated chi-squared values into dataframe
perm_df <- tibble(chiSq = chiSqVec, sign = NA)
perm_df
for(i in 1:nrow(perm_df)) {
if(perm_df$chiSq[i] > obsXsq) {
perm_df$sign[i] <- TRUE
} else {
perm_df$sign[i] <- FALSE
}
}
perm_df
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq, fill = sign)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq), fill = sign) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq, fill = sign)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq, fill = sign)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density") +
geom_area(aes(x = chiSq))
p1
fu <- ggplot_build(p1)$data[[1]]
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq, fill = sign)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density") +
geom_area(aes(x = chiSq))
p1
fu <- ggplot_build(p1)$data[[1]]
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density") +
geom_area(aes(x = chiSq))
p1
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq)) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "blue", size = 3, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "blue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p1
fu <- ggplot_build(p1)$data[[1]]
fu
bar <- filter(fu, x > obsXsq)
p2 <- p1 +
geom_area(data = bar, aes(x = x, y = y), fill = "red", alpha = 0.5)
p2
p2 <- p1 +
geom_area(data = filter(fu, x > obsXsq), aes(x = x, y = y), fill = "red", alpha = 0.5) +
geom_area(data = filter(fu, x < obsXsq), aes(x = x, y = y), fill = "blue", alpha = 0.5)
p2
# create plot for density across all values
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq))
# pull densities from ggplot object
## this is so I can color each half (below and above the observed value) separately
perm_dens <- ggplot_build(p1)$data[[1]]
p2 <- p1 +
# color area above observed value
geom_area(data = filter(perm_dens, x > obsXsq),
aes(x = x, y = y), fill = "red", alpha = 0.25) +
geom_area(data = filter(perm_dens, x < obsXsq),
aes(x = x, y = y), fill = "blue", alpha = 0.25) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "darkblue", size = 4 shape = 8) +
p2 <- p1 +
# color area above observed value
geom_area(data = filter(perm_dens, x > obsXsq),
aes(x = x, y = y), fill = "red", alpha = 0.25) +
geom_area(data = filter(perm_dens, x < obsXsq),
aes(x = x, y = y), fill = "blue", alpha = 0.25) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "darkblue", size = 4 shape = 8) +
p2 <- p1 +
# color area above observed value
geom_area(data = filter(perm_dens, x > obsXsq),
aes(x = x, y = y), fill = "red", alpha = 0.25) +
geom_area(data = filter(perm_dens, x < obsXsq),
aes(x = x, y = y), fill = "blue", alpha = 0.25) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "darkblue", size = 4, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "darkblue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p2
obsXsq_Y <- filter(perm_dens, x == obsXsq)
obsXsq_Y
obsXsq_Y <- filter(perm_dens, x ~= obsXsq)
# convert permutated chi-squared values into dataframe
perm_df <- tibble(chiSq = chiSqVec, sign = NA)
for(i in 1:nrow(perm_df)) {
if(perm_df$chiSq[i] > obsXsq) {
perm_df$sign[i] <- TRUE
} else {
perm_df$sign[i] <- FALSE
}
}
# create plot for density across all values
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq))
# pull densities from ggplot object
## this is so I can color each half (below and above the observed value) separately
perm_dens <- ggplot_build(p1)$data[[1]]
p2 <- p1 +
# color area above observed value
geom_area(data = filter(perm_dens, x >= obsXsq),
aes(x = x, y = y), fill = "red", alpha = 0.25) +
geom_area(data = filter(perm_dens, x =< obsXsq),
# convert permutated chi-squared values into dataframe
perm_df <- tibble(chiSq = chiSqVec, sign = NA)
for(i in 1:nrow(perm_df)) {
if(perm_df$chiSq[i] > obsXsq) {
perm_df$sign[i] <- TRUE
} else {
perm_df$sign[i] <- FALSE
}
}
# create plot for density across all values
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq))
# pull densities from ggplot object
## this is so I can color each half (below and above the observed value) separately
perm_dens <- ggplot_build(p1)$data[[1]]
p2 <- p1 +
# color area above observed value
geom_area(data = filter(perm_dens, x >= obsXsq),
aes(x = x, y = y), fill = "red", alpha = 0.25) +
geom_area(data = filter(perm_dens, x <= obsXsq),
aes(x = x, y = y), fill = "blue", alpha = 0.25) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq, y = ),
aes(x = chiSq, y = ), color = "darkblue", size = 4, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "darkblue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p2 <- p1 +
# color area above observed value
geom_area(data = filter(perm_dens, x >= obsXsq),
aes(x = x, y = y), fill = "red", alpha = 0.25) +
geom_area(data = filter(perm_dens, x <= obsXsq),
aes(x = x, y = y), fill = "blue", alpha = 0.25) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq, y = ),
aes(x = chiSq, y = ), color = "darkblue", size = 4, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "darkblue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p2 <- p1 +
# color area above observed value
geom_area(data = filter(perm_dens, x >= obsXsq),
aes(x = x, y = y), fill = "red", alpha = 0.25) +
geom_area(data = filter(perm_dens, x <= obsXsq),
aes(x = x, y = y), fill = "blue", alpha = 0.25) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq, y = 0),
aes(x = chiSq, y = ), color = "darkblue", size = 4, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "darkblue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p2
p2 <- p1 +
# color area above observed value
geom_area(data = filter(perm_dens, x >= obsXsq),
aes(x = x, y = y), fill = "red", alpha = 0.25) +
geom_area(data = filter(perm_dens, x <= obsXsq),
aes(x = x, y = y), fill = "blue", alpha = 0.25) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq, y = 0),
aes(x = chiSq, y = 0), color = "darkblue", size = 4, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "darkblue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p2 <- p1 +
# color area above observed value
geom_area(data = filter(perm_dens, x >= obsXsq),
aes(x = x, y = y), fill = "red", alpha = 0.25) +
geom_area(data = filter(perm_dens, x <= obsXsq),
aes(x = x, y = y), fill = "blue", alpha = 0.25) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "darkblue", size = 4, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "darkblue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p2
# set seed for replicability
## pulls the same pseudo-random number string each time this code is run
set.seed(2337)
# number of times to repeat test
m <- 1000
possibleVals <- 1:6
# create empty vector to store permutation test statistics
chiSqVec <- vector()
# start permutation loop
for(i in 1:m) {
# randomly sample values from 1-6, 60 times
loopRolls <- tibble(value = sample(x = possibleVals, replace = TRUE,
size = nRolls))
# count interations of each value
loopSumm <- loopRolls |>
count(value)
# pull observed counts for each value
loopObs <- loopSumm$n
# calculate chi-squared test statistic
loopXsq <- sum((loopObs - Expected)^2 / Expected)
# save loop chi-squared value to i'th index of empty vector
chiSqVec[i] <- loopXsq
}
# convert permutated chi-squared values into dataframe
perm_df <- tibble(chiSq = chiSqVec, sign = NA)
for(i in 1:nrow(perm_df)) {
if(perm_df$chiSq[i] > obsXsq) {
perm_df$sign[i] <- TRUE
} else {
perm_df$sign[i] <- FALSE
}
}
# create plot for density across all values
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq))
# pull densities from ggplot object
## this is so I can color each half (below and above the observed value) separately
perm_dens <- ggplot_build(p1)$data[[1]]
p2 <- p1 +
# color area above observed value
geom_area(data = filter(perm_dens, x >= obsXsq),
aes(x = x, y = y), fill = "red", alpha = 0.25) +
geom_area(data = filter(perm_dens, x <= obsXsq),
aes(x = x, y = y), fill = "blue", alpha = 0.25) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "darkblue", size = 4, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "darkblue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p2
# calculate p-value by counting all instances of chi squared greater than the observed, divided by the total number of tests
pval <- sum(chiSqVec > obsXsq) / m
pval
# set seed for replicability
## pulls the same pseudo-random number string each time this code is run
set.seed(2336)
# set seed for replicability
## pulls the same pseudo-random number string each time this code is run
set.seed(2336)
# number of times to repeat test
m <- 1000
possibleVals <- 1:6
# create empty vector to store permutation test statistics
chiSqVec <- vector()
# start permutation loop
for(i in 1:m) {
# randomly sample values from 1-6, 60 times
loopRolls <- tibble(value = sample(x = possibleVals, replace = TRUE,
size = nRolls))
# count interations of each value
loopSumm <- loopRolls |>
count(value)
# pull observed counts for each value
loopObs <- loopSumm$n
# calculate chi-squared test statistic
loopXsq <- sum((loopObs - Expected)^2 / Expected)
# save loop chi-squared value to i'th index of empty vector
chiSqVec[i] <- loopXsq
}
# calculate p-value by counting all instances of chi squared greater than the observed, divided by the total number of tests
pval <- sum(chiSqVec > obsXsq) / m
pval
# convert permutated chi-squared values into dataframe
perm_df <- tibble(chiSq = chiSqVec, sign = NA)
# create plot for density across all values
p1 <- ggplot(data = perm_df) +
# density function
geom_density(aes(x = chiSq))
# pull densities from ggplot object
## this is so I can color each half (below and above the observed value) separately
perm_dens <- ggplot_build(p1)$data[[1]]
p2 <- p1 +
# color area above observed value
geom_area(data = filter(perm_dens, x >= obsXsq),
aes(x = x, y = y), fill = "red", alpha = 0.25) +
geom_area(data = filter(perm_dens, x <= obsXsq),
aes(x = x, y = y), fill = "blue", alpha = 0.25) +
# original Observed value
geom_point(data = tibble(chiSq = obsXsq),
aes(x = chiSq, y = 0), color = "darkblue", size = 4, shape = 8) +
geom_vline(aes(xintercept = obsXsq), linetype = 3, color = "darkblue") +
# change labels and aesthetics for visualization
xlab(expression(paste(chi^2))) +
ylab("Density")
p2
