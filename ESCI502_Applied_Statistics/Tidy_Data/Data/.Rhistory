theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal3)
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal3) +
ylim(-1,6.75)
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal3) +
ylim(-2,8)
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal3) +
ylim(-5,8)
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal3)
fishdata_long |>
ggplot(aes(Depth, log(Count + 0.5), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal3)
pal4 <- pnw_palette("Bay", 2)
pal2
pal3
pal4
fishdata_long |>
ggplot(aes(Depth, log(Count + 0.5), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal4)
fishdata_long |>
ggplot(aes(Depth, log(Count + 0.5), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal3)
pal2 <- pnw_palette("Lake", 2)
fishdata_long |>
ggplot(aes(Depth, Count, color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
fishdata_long |>
ggplot(aes(Depth, log(Count + 0.5), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
```{r depth_log_transform1, echo=FALSE}
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
fishdata_SS |>
ggplot(aes(Temp, Slender.Sole)) +
geom_point(col=pal) +
theme_minimal() +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Slender Sole (individuals)") +
ggtitle("Slender Sole Count by Temperature") +
theme(plot.title = element_text(hjust = 0.5))
head(fishdata_long)
dim(fishdata_long)
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Log Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
fishdata_long |>
ggplot(aes(Depth, log(Count + 0.5), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Log Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
#loading the cleaned and exported data
fishData <- read.csv(file = file.choose())
#loading tidyverse
library(tidyverse)
summarize(fishData)
#loading the cleaned and exported data
fishData <- read.csv(file = file.choose())
#loading the cleaned and exported data
fishData <- read.csv(file = file.choose())
#loading the cleaned and exported data
fishData <- read.csv(file = file.choose())
fishData <- read.csv("fishdata_clean.csv")
head(fishdata)
summarize(fishData)
head(fishData)
summarize(fishData)
plot(fishData$Avg.Upwelling.Iex ~ fishData$Year)
knitr::opts_knit$set(root.dir = 'C:/Users/lukeg/OneDrive - Western Washington University/Esci502_WD/HW_Tidy_Data/Data')
getwd()
library(tidyverse)
fishData <- read.csv("fishdata_clean.csv")
head(fishdata)
library(ggplot2)
library(PNWColors)
fishdata |>
group_by(Month)|>
drop_na(DO) |>
summarize(
mean_Temp = mean(Temp),
mean_DO = mean(DO))
fishdata |>
ggplot(aes(Temp, Slender.Sole)) +
geom_point(col="coral3") +
theme_minimal() +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Slender Sole (individuals)") +
ggtitle("Slender Sole Count by Temperature") +
theme(plot.title = element_text(hjust = 0.5))
# Finding palette names
# names(pnw_palettes)
# Determine the number of data points.
#fishdata |>
#  summarize(n = n())
pal <- pnw_palette("Sailboat", 114)
# names(pnw_palettes)
# pal
fishdata_SS <- fishdata |>
select(Temp, Slender.Sole) |>
arrange(Temp)
# Arranging by Temp creates an ascending order of colors assigned to each point in the plot.
# Double-checking the new table.
# fishdata_SS
fishdata_SS |>
ggplot(aes(Temp, Slender.Sole)) +
geom_point(col=pal) +
theme_minimal() +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Slender Sole (individuals)") +
ggtitle("Slender Sole Count by Temperature") +
theme(plot.title = element_text(hjust = 0.5))
present_func <- function(x) sum(x != 0, na.rm = TRUE)
# Comparing with excel values to determine accuracy of code.
present_func(fishdata$Black.Rockfish)
sum(fishdata$Black.Rockfish, na.rm=TRUE)
present_func(fishdata$Year)
sum(fishdata$Year)
n_func <- function(x) sum(x != "", na.rm = TRUE)
# Comparing with excel value to determine accuracy.
n_func(fishdata$Black.Rockfish)
n_func(fishdata$Year)
freq_func <- function(x) present_func(x)/n_func(x)
# Comparing with excel value.
freq_func(fishdata$Black.Rockfish)
freq_func(fishdata$Year)
fishdata_freq<-fishdata |>
sapply(freq_func)
fishdata_freq
## For some reason, apply will not work with this custom function, so I had to use sapply but don't entirely understand why it worked instead. The function, when used individually on a column, will calculate the correct proportion, but when applied to the entire dataframe, the present_func is not recording accurate numbers of values that are not zero.
fishdata_over20<- fishdata |>
select(c(Year:Avg.Upwelling.Index, Slender.Sole, Warty.Poacher))
head(fishdata_over20)
dim(fishdata_over20)
fishdata_long <- fishdata_over20 |>
gather(key = Species, value = Count, Slender.Sole:Warty.Poacher, factor_key = TRUE)
head(fishdata_long)
dim(fishdata_long)
names(pnw_palettes)
pal2 <- pnw_palette("Lake", 2)
fishdata_long |>
ggplot(aes(Depth, Count, color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Log Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
fishdata_long |>
ggplot(aes(Depth, log(Count + 0.5), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Log Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
?geom_boxplot
A
p <- ggplot(mpg, aes(class, hwy))
fishdata_long |>
ggplot(aes(Depth, log(Count + 0.5), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Log Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
fishdata <- read.csv("fishdata_clean.csv")
head(fishdata)
fishdata_SS |>
ggplot(aes(Temp, Slender.Sole)) +
geom_point(col=pal) +
# theme_minimal() +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Slender Sole (individuals)") +
ggtitle("Slender Sole Count by Temperature") +
theme(plot.title = element_text(hjust = 0.5))
fishdata_SS |>
ggplot(aes(Temp, Slender.Sole)) +
geom_point(col=pal) +
theme_minimal() +
xlab(expression(paste("Temperature (", degree, "C)"))) +
ylab("Slender Sole (individuals)") +
ggtitle("Slender Sole Count by Temperature") +
theme(plot.title = element_text(hjust = 0.5))
pal2
names(pnw_palettes)
pal2 <- pnw_palette("Starfish", 2)
pal2
names(pnw_palettes)
pal2 <- pnw_palette("Bay", 2)
pal2
fishdata_long |>
ggplot(aes(Depth, Count, color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Log Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
pal2 <- pnw_palette("Bay2", 2)
names(pnw_palettes)
pal2 <- pnw_palette("Sunset", 2)
pal2
pal2 <- pnw_palette("Sunset2", 2)
pal2
fishdata_long |>
ggplot(aes(Depth, Count, color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Log Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
pal2 <- c("orchid2","coral3")
pal2
fishdata_long |>
ggplot(aes(Depth, Count, color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
pal2 <- c("orchid2","turquoise")
pal2
fishdata_long |>
ggplot(aes(Depth, Count, color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
pal2 <- c("orchid3","turquoise")
pal2 <- c("orchid3","turquoise3")
fishdata_long |>
ggplot(aes(Depth, Count, color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Log Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
names(pnw_palettes)
pal2 <- pnw_palette("Lake", 2)
pal2
fishdata_long |>
ggplot(aes(Depth, Count, color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ggtitle("Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
fishdata_long |>
ggplot(aes(Depth, log(Count), color = Species)) +
geom_point() +
theme_minimal() +
xlab("Depth (fathoms)") +
ylab("ln(Count)") +
ggtitle("Log Fish Counts by Depth per Species") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(name = "Species", values = pal2)
knitr::opts_knit$set(root.dir = 'C:/Users/lukeg/OneDrive - Western Washington University/Esci502_WD/HW_Tidy_Data/Data')```
knitr::opts_knit$set(root.dir = 'C:/Users/lukeg/OneDrive - Western Washington University/Esci502_WD/HW_Tidy_Data/Data')
```{r check-wd, include=FALSE}
getwd()
knitr::opts_knit$set(root.dir = 'C:/Users/lukeg/OneDrive - Western Washington University/Esci502_WD/HW_ANOVA/ANOVA_Activity/Assignment')
getwd()
knitr::opts_knit$set(root.dir = 'C:/Users/lukeg/OneDrive - Western Washington University/Esci502_WD/HW_ANOVA/ANOVA_Activity/Data')
getwd()
qf(0.01, df1 = 2, df2 = 27, lower.tail=F)
pf(2.75, df1 = 2, df2 = 27, lower.tail = F)
curve(df(x, df1 = 2, df2 = 27, xlim = c(0,10), ylab = "Density", xlab = "Fstat"))
curve(df(x, df1 = 2, df2 = 27, xlim = c(0,10), ylab = "Density", xlab = "Fstat"))
curve(df(x, df1 = 2, df2 = 27), xlim = c(0,10), ylab = "Density", xlab = "Fstat")
curve(df(x, df1 = 3, df2 = 47), xlim = c(0,10), ylab = "Density", xlab = "Fstat")
curve(df(x, df1 = 4, df2 = 14), xlim = c(0,10), ylab = "Density", xlab = "Fstat")
head(iris)
summary(iris)
?iris
vers = iris$Sepal.Length[iris$Species == "versicolor"]
seto = iris$Sepal.Length[iris$Species == "setosa"]
vers = iris$Sepal.Length[iris$Species == "versicolor"]
virg = iris$Sepal.Length[iris$Species == "virginica"]
par(mfrow = c(2,2))
#sets graphical parameters. Creates a 2x2 array of graphs so 3 histograms can be viewed in one plot window.
hist(seto, main = "setosa: Sepal Length")
hist(vers, main = "versicolor: Sepal Length")
hist(virg, main = "virginica: Sepal Length")
seto = iris$Sepal.Length[iris$Species == "setosa"]
vers = iris$Sepal.Length[iris$Species == "versicolor"]
virg = iris$Sepal.Length[iris$Species == "virginica"]
par(mfrow = c(2,2))
#sets graphical parameters. Creates a 2x2 array of graphs so 3 histograms can be viewed in one plot window.
hist(seto, main = "setosa: Sepal Length")
hist(vers, main = "versicolor: Sepal Length")
hist(virg, main = "virginica: Sepal Length")
head(iris)
ggplot(iris, aes(Sepal.Length)) +
geom_histogram(binwidth=0.35, col = "coral2", fill = "coral") +
facet_wrap(iris$Species)
hist(seto, main = "setosa: Sepal Length")
hist(vers, main = "versicolor: Sepal Length")
hist(virg, main = "virginica: Sepal Length")
par(mfrow = c(2,2))
#sets graphical parameters. Creates a 2x2 array of graphs so 3 histograms can be viewed in one plot window.
hist(seto, main = "setosa: Sepal Length")
hist(vers, main = "versicolor: Sepal Length")
hist(virg, main = "virginica: Sepal Length")
ggplot(iris, aes(Sepal.Width)) +
geom_histogram(binwidth=0.35, col = "coral2", fill = "coral") +
facet_wrap(iris$Species)
ggplot(iris, aes(Petal.Length)) +
geom_histogram(binwidth=0.35, col = "coral2", fill = "coral") +
facet_wrap(iris$Species)
ggplot(iris, aes(Petal.Width)) +
geom_histogram(binwidth=0.35, col = "coral2", fill = "coral") +
facet_wrap(iris$Species)
qqnorm(iris$Sepal.Length, main = "All Sepal Length")
qqnorm(seto, main = "setosa: Sepal Length")
shapiro.test(seto)
shapiro.test(vers)
shapiro.test(virg)
ggplot(iris, aes(Petal.Width)) +
geom_histogram(binwidth=0.35, col = "coral2", fill = "coral") +
facet_wrap(iris$Species)
ggplot(iris, aes(Petal.Width)) +
geom_histogram(binwidth=0.15, col = "coral2", fill = "coral") +
facet_wrap(iris$Species)
iris |>
group_by(Species) |>
summarise(statistic = shapiro.test(Petal.Width)$statistic,
p.value = shapiro.test(Petal.Width)$p.value)
# Within summarise(), invoke the function, here shapiro.test(), and tell it what output you want (statistic and p.value)
```
iris |>
group_by(Species) |>
summarise(statistic = shapiro.test(Petal.Width)$statistic,
p.value = shapiro.test(Petal.Width)$p.value)
length(iris$Petal.Width[iris$Species=="setosa"])
stripchart(iris$Sepal.Length ~ iris$Species, vertical = F, method = "jitter", jitter = 0.1, pch = 19, col = "navy", las = 1)
iris |>
tapply(Sepal.Length, Species, sd)
tapply(iris$Sepal.Length, iris$Species, sd)
library(Car)
library(car)
install.packages(car)
install.packages("car")
library(car)
leveneTest(iris$Sepal.Length~iris$Species, data = iris)
iris.aov <- aov(iris$Sepal.Length ~ iris$Species)
summary(iris.aov)
tapply(iris$Sepal.Length, iris$Species, mean)
TukeyHSD(iris.aov)
iris.lm <- lm(iris$Sepal.Length ~ iris$Species) # Fit the linear regression.
summary(iris.lm)
anova(iris.lm)
```{r}
?relevel
summary(iris.lm)
iris$Species <- relevel(iris$Species, ref = "versicolor")
iris.lm
summary(iris.lm)
iris$Species <- relevel(iris$Species, ref = "versicolor")
iris.lm <- lm(iris$Sepal.Length ~ iris$Species)
summary(iris.lm)
worms <- read.csv("Nereis.csv")
head(worms)
dim(worms)
str(worm)
str(worms)
M <- worms |>
aov(concentration ~ biomass*nutrient)
worms |>
M <- aov(concentration ~ biomass*nutrient)
M <- aov(worms$concentration ~ worms$biomass*worms$nutrient)
summary(M)
M2 <- aov(concentration~as.factor(biomass)*as.factor(nutrient), data=worms)
summary(M2)
M1 <- lm(worms$concentration ~ worms$biomass + worms$nutrient) # no interaction
summary(M1)
anova(M1)
tinytex::install_tinytex()
